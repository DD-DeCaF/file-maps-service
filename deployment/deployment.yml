apiVersion: apps/v1
kind: Deployment
metadata:
  name: map-storage-staging
spec:
  selector:
    matchLabels:
      app: map-storage
      env: staging
  replicas: 1
  template:
    metadata:
      labels:
        app: map-storage
        env: staging
    spec:
      containers:
      - name: web
        image: gcr.io/dd-decaf-cfbf6/maps:devel
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: staging
        - name: SCRIPT_NAME
          value: /maps
        - name: FLASK_APP
          value: src/map_storage/wsgi.py
        - name: ALLOWED_ORIGINS
          value: https://caffeine.dd-decaf.eu,https://staging.dd-decaf.eu,http://localhost:4200
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: map-storage-staging
              key: SENTRY_DSN
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: map-storage-staging
              key: SECRET_KEY
        - name: POSTGRES_HOST
          value: localhost
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB_NAME
          value: metabolic_ninja
        - name: POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              name: map-storage-staging
              key: POSTGRES_USERNAME
        - name: POSTGRES_PASS
          valueFrom:
            secretKeyRef:
              name: map-storage-staging
              key: POSTGRES_PASS
        - name: IAM_API
          value: https://api-staging.dd-decaf.eu/iam
        command: ["/bin/sh", "-c"]
        args: ["flask db upgrade && gunicorn -c gunicorn.py map_storage.wsgi:app"]
        resources:
          requests:
            cpu: "5m"
          limits:
            cpu: "100m"
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy", "-instances=dd-decaf-cfbf6:europe-west1:dd-decaf=tcp:5432", "-credential_file=/secrets/cloudsql/credentials.json"]
        resources:
          requests:
            cpu: "100m"
          limits:
            cpu: "500m"
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
